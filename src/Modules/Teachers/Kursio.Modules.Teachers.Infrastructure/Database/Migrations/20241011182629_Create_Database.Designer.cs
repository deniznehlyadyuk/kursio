// <auto-generated />
using System;
using Kursio.Modules.Teachers.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kursio.Modules.Teachers.Infrastructure.Database.Migrations
{
    [DbContext(typeof(TeachersDbContext))]
    [Migration("20241011182629_Create_Database")]
    partial class Create_Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("teachers")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Classrooms.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AssociatedCourseCount")
                        .HasColumnType("integer")
                        .HasColumnName("associated_course_count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_classrooms");

                    b.ToTable("classrooms", "teachers");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Courses.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uuid")
                        .HasColumnName("classroom_id");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("integer")
                        .HasColumnName("day_of_week");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval")
                        .HasColumnName("duration");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval")
                        .HasColumnName("start_time");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid")
                        .HasColumnName("teacher_id");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uuid")
                        .HasColumnName("topic_id");

                    b.HasKey("Id")
                        .HasName("pk_courses");

                    b.HasIndex("ClassroomId")
                        .HasDatabaseName("ix_courses_classroom_id");

                    b.HasIndex("TeacherId")
                        .HasDatabaseName("ix_courses_teacher_id");

                    b.HasIndex("TopicId")
                        .HasDatabaseName("ix_courses_topic_id");

                    b.ToTable("courses", "teachers");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Courses.CourseStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<int>("PaymentAmount")
                        .HasColumnType("integer")
                        .HasColumnName("payment_amount");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("pk_course_students");

                    b.HasIndex("CourseId")
                        .HasDatabaseName("ix_course_students_course_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_course_students_student_id");

                    b.ToTable("course_students", "teachers");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Courses.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.HasKey("Id")
                        .HasName("pk_students");

                    b.ToTable("students", "teachers");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Teachers.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AssociatedCourseCount")
                        .HasColumnType("integer")
                        .HasColumnName("associated_course_count");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("pk_teachers");

                    b.ToTable("teachers", "teachers");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Topics.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AssociatedCourseCount")
                        .HasColumnType("integer")
                        .HasColumnName("associated_course_count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_topics");

                    b.ToTable("topics", "teachers");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Courses.Course", b =>
                {
                    b.HasOne("Kursio.Modules.Teachers.Domain.Classrooms.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_courses_classrooms_classroom_id");

                    b.HasOne("Kursio.Modules.Teachers.Domain.Teachers.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_courses_teachers_teacher_id");

                    b.HasOne("Kursio.Modules.Teachers.Domain.Topics.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_courses_topics_topic_id");

                    b.Navigation("Classroom");

                    b.Navigation("Teacher");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Courses.CourseStudent", b =>
                {
                    b.HasOne("Kursio.Modules.Teachers.Domain.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_students_courses_course_id");

                    b.HasOne("Kursio.Modules.Teachers.Domain.Courses.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_students_students_student_id");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Kursio.Modules.Teachers.Domain.Courses.Student", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
